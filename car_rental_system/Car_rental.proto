syntax = "proto3";

package car_rental;

// Enum for car status
enum CarStatus {
    AVAILABLE = 0;
    UNAVAILABLE = 1;
}

// Enum for user role
enum UserRole {
    CUSTOMER = 0;
    ADMIN = 1;
}

// Car message
message Car {
    string make = 1;
    string model = 2;
    int32 year = 3;
    double daily_price = 4;
    int32 mileage = 5;
    string plate = 6;
    CarStatus status = 7;
}

// User message
message User {
    string user_id = 1;
    string name = 2;
    string email = 3;
    UserRole role = 4;
}

// Cart item message
message CartItem {
    string plate = 1;
    string start_date = 2;  // DD-MM-YYYY format
    string end_date = 3;    // DD-MM-YYYY format
}

// Reservation message
message Reservation {
    string reservation_id = 1;
    string user_id = 2;
    repeated CartItem items = 3;
    double total_price = 4;
    string reservation_date = 5;
}

// Request and Response messages
message AddCarRequest {
    Car car = 1;
}

message AddCarResponse {
    string plate = 1;
    string message = 2;
}

message CreateUsersResponse {
    int32 users_created = 1;
    string message = 2;
}

message UpdateCarRequest {
    string plate = 1;
    Car updated_car = 2;
}

message UpdateCarResponse {
    bool success = 1;
    string message = 2;
}

message RemoveCarRequest {
    string plate = 1;
}

message RemoveCarResponse {
    repeated Car cars = 1;
    string message = 2;
}

message ListAvailableCarsRequest {
    string filter = 1;  // Optional filter text
}

message SearchCarRequest {
    string plate = 1;
}

message SearchCarResponse {
    Car car = 1;
    bool found = 2;
    string message = 3;
}

message AddToCartRequest {
    string user_id = 1;
    string plate = 2;
    string start_date = 3;  // DD-MM-YYYY
    string end_date = 4;    // DD-MM-YYYY
}

message AddToCartResponse {
    bool success = 1;
    string message = 2;
}

message PlaceReservationRequest {
    string user_id = 1;
}

message PlaceReservationResponse {
    Reservation reservation = 1;
    bool success = 2;
    string message = 3;
}

message Empty {}

// Service definition
service CarRentalService {
    // Admin operations
    rpc add_car(AddCarRequest) returns (AddCarResponse);
    rpc create_users(stream User) returns (CreateUsersResponse);
    rpc update_car(UpdateCarRequest) returns (UpdateCarResponse);
    rpc remove_car(RemoveCarRequest) returns (RemoveCarResponse);
    rpc list_reservations(Empty) returns (stream Reservation);
    
    // Customer operations
    rpc list_available_cars(ListAvailableCarsRequest) returns (stream Car);
    rpc search_car(SearchCarRequest) returns (SearchCarResponse);
    rpc add_to_cart(AddToCartRequest) returns (AddToCartResponse);
    rpc place_reservation(PlaceReservationRequest) returns (PlaceReservationResponse);
}